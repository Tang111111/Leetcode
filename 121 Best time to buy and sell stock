//解法一
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int number=0;
        for(int i=0;i<prices.size();i++)
        {
            for(int j=i+1;j<prices.size();j++)
            {
                if(prices[j]-prices[i]>number)
                    number=prices[j]-prices[i];
            }
        }
        return number;
        
    }
};

//解法二 用STL 取两个值int min_cost,max_profit 其中min_cost=min(遍历过的所有价格) max_profit=max(当前价格减去min_cost) return max_profit
class Solution {
public:
    int maxProfit(vector<int>& prices) {
       int min_cost=INT_MAX;
       int max_profit=0;
        for(int i=0;i<prices.size();i++)
        {
            min_cost=min(min_cost,prices[i]);
            //cout<<min_cost<<endl;
            max_profit=max(max_profit,prices[i]-min_cost);
            //cout<<max_profit<<endl;
        }
        return max_profit;
        
    }
};
